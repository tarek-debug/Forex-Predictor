name: ForEx Predictor CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Build and push UI container
      - name: Build and Push UI Container
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/fxp-ui-image:v0.0.1 ./pages
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/fxp-ui-image:v0.0.1

      # Build and push Gateway container
      - name: Build and Push Gateway Container
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/forex-gateway:v0.0.1 ./gateway
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/forex-gateway:v0.0.1

      # Build and push Prediction container
      - name: Build and Push Prediction Container
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/forex-prediction:v0.0.1 ./prediction
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/forex-prediction:v0.0.1

      # Build and push Data Storage container
      - name: Build and Push Data Storage Container
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/forex-data-storage:v0.0.1 ./data_storage
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/forex-data-storage:v0.0.1

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install kubectl
        run: |
          sudo apt-get update
          sudo apt-get install -y kubectl

      - name: Setup Kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy UI Service
        run: |
          kubectl apply -f apps/configmap.yaml
          kubectl apply -f apps/ui-deployment.yaml
          kubectl apply -f apps/ui-service.yaml
          kubectl apply -f apps/fxp-ui-ingress.yaml

      - name: Deploy Gateway Service
        run: |
          kubectl apply -f apps/gateway-deployment.yaml
          kubectl apply -f apps/gateway-service.yaml

      - name: Deploy Prediction Service
        run: |
          kubectl apply -f apps/prediction-deployment.yaml
          kubectl apply -f apps/prediction-service.yaml

      - name: Deploy Data Storage Service
        run: |
          kubectl apply -f apps/data-storage-deployment.yaml
          kubectl apply -f apps/data-storage-service.yaml
